<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout">
    <j:set var="q" value="${request.getParameter('q')}"/>
    <j:new var="h" className="hudson.Functions"/>
    <!-- needed for printing title. -->
    <l:layout title="${%Search for} '${q}'">
        <l:side-panel>
            <link rel="stylesheet" type="text/css" href="${rootURL}/plugin/lucene-search/search.css" media="screen"/>
            <h3>${%Search Help}</h3>
            <p>
                Search Range:
                <br/>
                1. Console log
                <br/>
                2. Build display name
                <br/>
                3. Build parameter
                <br/>
                <br/>
                Search Mode:
                <br/>
                1. Single-job search
                <br/>
                2. Across-job search
                <br/>
                <br/>
                If the first word of the query is recognized as a job name, single-job search will be performed;
                otherwise, across-job search will be performed.
                <br/>
                <br/>
                The list of keywords are:
                <br/>
                "c" : console log
                <br/>
                "d" : build display name
                <br/>
                "p" : build parameter
                <br/>
                "j" : job name
                <br/>
                "n" : build number
                <br/>
            </p>
            <h3>${%Search examples}</h3>
            <p>
                Search across different jobs:
                <br/>
                "some keywords in some console log"
                <br/>
                <br/>
                Search in a specific job:
                <br/>
                "jobName some keywords in some console log"
                <br/>
                <br/>
                Search for console log in a specific job:
                <br/>
                "jobName c:words you want to search for"
                <br/>
            </p>
            <h3>${%Operators}</h3>
            <p>
                ?: one unknown character
                <br/>
                <br/>
                *: any number of unknown characters
                <br/>
                <br/>
                AND(&amp;&amp;): must satisfy both queries; it is the default logical operator
                <br/>
                <br/>
                OR(||): must satisfy at least one query
                <br/>
                <br/>
                NOT(-): must not satisfy the following query
                <br/>
                <br/>
                "": put query between double quotes to search for successive words
                <br/>
            </p>
            <h3>${%More information}</h3>
            <p>
                <a href="http://www.lucenetutorial.com/lucene-query-syntax.html">${%Lucene Query Syntax}</a>
                <br/>
            </p>
        </l:side-panel>

        <l:main-panel>
            <j:set var="searchModelHits" value="${it.searchModelHits}"/>
            <script type="text/javascript" src="${rootURL}/plugin/lucene-search/search.js"/>
            <script>
                var search =
                <st:bind value="${it}"/>
            </script>

            <form method="get"
                  style="display: grid; grid-template-columns: 500px 46px; gap: 1rem"
                  class="jenkins-!-margin-bottom-3">
                <input type="search"
                       value="${q}"
                       name="q"
                       autofocus="true"
                       class="jenkins-input"
                       placeholder="${%Search}" />
                <button class="jenkins-button jenkins-button--primary">
                    <l:icon src="symbol-search" />
                </button>
            </form>

            <h2 id="numberOfResults" style="display: inline"/>
            <button class="bnt" style="left: 60px; background-color: Azure" onclick="toMiddle()">${%m}</button>
            <button class="bnt" style="left: 100px; background-color: Beige" onclick="toBottom()">${%b}</button>
            <hr/>
            <j:choose>
                <j:when test="${it.noResult}">
                    <div class='error'>
                        ${%Nothing seems to match.}
                    </div>
                </j:when>
                <j:otherwise>
                    <ol id="results">
                    </ol>
                </j:otherwise>
            </j:choose>
            <script>
                loadNext();
            </script>
            <button id="btnPrev" style="margin-left: 0%" onclick="loadPrev()">${%prev}</button>
            <button id="btnNext" style="margin-left: 80%" onclick="loadNext()">${%next}</button>
        </l:main-panel>
    </l:layout>
</j:jelly>
